#! /usr/bin/env python2
PACKAGE = "cis_camera"

from dynamic_reconfigure.parameter_generator_catkin import *

RECONFIGURE_CLOSE   = 3 # Parameters that need a sensor to be stopped completely when changed
RECONFIGURE_STOP    = 1 # Parameters that need a sensor to stop streaming when changed
RECONFIGURE_RUNNING = 0 # Parameters that can be changed while a sensor is streaming

gen = ParameterGenerator()

dir_hard = gen.add_group( "Depth IR Parameters on Camera Hardware" )
depth_range_enum = gen.enum([ gen.const( "Range_0", int_t, 0, "Range: 0" ),
                              gen.const( "Range_1", int_t, 1, "Range: 1" ) ],
                              "An enum to set depth_range" )

dir_hard.add( "depth_range", int_t, RECONFIGURE_RUNNING, 
              "Depth Range 0:Range0 1:Range1", 0, 0, 1, edit_method = depth_range_enum )
nr_filter_enum = gen.enum([ gen.const( "NR_Off", int_t, 0, "Noise Reduction Filter: Off" ),
                            gen.const( "NR_On" , int_t, 1, "Noise Reduction Filter: On"  ) ],
                            "An enum to set NR filter" )
dir_hard.add( "nr_filter", int_t, RECONFIGURE_RUNNING, 
              "Noise Reduction Filter", 1, 0, 1, edit_method = nr_filter_enum )
dir_hard.add( "threshold", int_t, RECONFIGURE_RUNNING, 
              "Corering Threshold Unit:[mm]", 0, 0, 0x3FF )
dir_hard.add( "pulse_count", int_t, RECONFIGURE_RUNNING, 
              "Pulse Count", 2000, 0, 2000 )
dir_hard.add( "ld_enable", int_t, RECONFIGURE_RUNNING, 
              "Laser Diode Enable 0:LD1&2-OFF 1:LD1-ON 2:LD2-ON 3:LD1&2-ON", 3, 0, 3 )
dir_hard.add( "ir_gain", int_t, RECONFIGURE_RUNNING, 
              "IR Gain", 256, 0, 0x7FF )

rgb_hard = gen.add_group( "RGB Parameters on Camera Hardware" )
ae_mode_enum = gen.enum([ gen.const( "Manual"      , int_t, 0, "Manual" ),
                          gen.const( "Auto_Gain"   , int_t, 1, "Auto: Gain" ),
                          gen.const( "Auto_Shutter", int_t, 2, "Auto: Shutter" ),
                          gen.const( "Auto_Full"   , int_t, 3, "Auto: Full" ) ],
                          "An enum to set ae_mode" )
rgb_hard.add( "ae_mode", int_t, RECONFIGURE_RUNNING, 
              "RGB Auto Exposure Mode", 3, 0, 3, edit_method = ae_mode_enum )
color_correction_enum = gen.enum([ gen.const( "Off"     , int_t, 0, "Off" ),
                                   gen.const( "Standard", int_t, 1, "Standard" ) ],
                                   "An enum to set color_correction" )
rgb_hard.add( "color_correction", int_t, RECONFIGURE_RUNNING, 
              "Color Correction Mode", 1, 0, 1, edit_method = color_correction_enum )
rgb_hard.add( "brightness_gain", double_t, RECONFIGURE_RUNNING, 
              "RGB Brightness Gain", 1.0, 1.0, 10.67 )
rgb_hard.add( "exposure_time", double_t, RECONFIGURE_RUNNING, 
              "RGB Exposure Time (Shutter Control)", 0.01, 0.00001, 0.01 )

dir_soft = gen.add_group( "Depth IR Camera Distortion Correction on Driver Software" )
dir_soft.add( "ir_dist_reconfig", bool_t, RECONFIGURE_RUNNING, "IR/Depth Camera Distortion Correction Reconfigure", False )
dir_soft.add( "ir_fx", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera Fx", 390.000, 100.0, 500.0 )
dir_soft.add( "ir_fy", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera Fy", 390.000, 100.0, 500.0 )
dir_soft.add( "ir_cx", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera Cx", 335.000, 100.0, 500.0 )
dir_soft.add( "ir_cy", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera Cy", 230.000, 100.0, 500.0 )
dir_soft.add( "ir_k1", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera K1", -0.1900, -0.25,  0.25 )
dir_soft.add( "ir_k2", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera K2",  0.0700, -0.10,  0.10 )
dir_soft.add( "ir_k3", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera K3",  0.0050, -0.10,  0.10 )
dir_soft.add( "ir_p1", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera P1",  0.0001, -0.05,  0.05 )
dir_soft.add( "ir_p2", double_t, RECONFIGURE_RUNNING, "IR/Depth Camera P2",  0.0005, -0.05,  0.05 )

rgb_color = gen.add_group( "RGB Camera Color Gains on Driver Software" )
rgb_color.add( "r_gain", double_t, RECONFIGURE_RUNNING, "Red Gain"  , 1.0, 0.0, 1.0 )
rgb_color.add( "g_gain", double_t, RECONFIGURE_RUNNING, "Green Gain", 1.0, 0.0, 1.0 )
rgb_color.add( "b_gain", double_t, RECONFIGURE_RUNNING, "Blue Gain" , 1.0, 0.0, 1.0 )

rgb_soft = gen.add_group( "RGB Camera Distortion Correction on Driver Software" )
rgb_soft.add( "rgb_dist_reconfig", bool_t, RECONFIGURE_RUNNING, "RGB Camera Distortion Correction Reconfigure", False )
rgb_soft.add( "rgb_fx", double_t, RECONFIGURE_RUNNING, "RGB Camera Fx", 775.300, 100.0, 900.0 )
rgb_soft.add( "rgb_fy", double_t, RECONFIGURE_RUNNING, "RGB Camera Fy", 773.500, 100.0, 900.0 )
rgb_soft.add( "rgb_cx", double_t, RECONFIGURE_RUNNING, "RGB Camera Cx", 620.000, 100.0, 900.0 )
rgb_soft.add( "rgb_cy", double_t, RECONFIGURE_RUNNING, "RGB Camera Cy", 480.000, 100.0, 900.0 )
rgb_soft.add( "rgb_k1", double_t, RECONFIGURE_RUNNING, "RGB Camera K1", -0.3404, -0.50,  0.50 )
rgb_soft.add( "rgb_k2", double_t, RECONFIGURE_RUNNING, "RGB Camera K2",  0.1460, -0.20,  0.20 )
rgb_soft.add( "rgb_k3", double_t, RECONFIGURE_RUNNING, "RGB Camera K3", -0.0314, -0.10,  0.10 )
rgb_soft.add( "rgb_p1", double_t, RECONFIGURE_RUNNING, "RGB Camera P1",  0.0005, -0.05,  0.05 )
rgb_soft.add( "rgb_p2", double_t, RECONFIGURE_RUNNING, "RGB Camera P2",  0.0001, -0.05,  0.05 )


exit( gen.generate( PACKAGE, "cis_camera", "CISCamera" ) )
